+ получение кук. действуют год
  - получить номер
  - зарезловить каптчу
+ оставить коммент
  - click li.user-activity__tab[1]
  - textarea#new-question -> enter
- заполнить био
+ просмотр всего по поисковому запросу
+ оставить коммент
- добавить в избранное и заказать через интервал N



архитектура:
1. добавление через веб морду. тип, параметры. для каждого параметры разные, поэтому нет смысла выводить их в отдельные
колонки. можно проверить:

- проставить лайки/дизлайки к коментам
  - артикул
  - имя коментатора
  - дата
  - сколько лайков
- посетить все странички бренда/поискового запроса
  - артикул/бренд/запрос -> артикулы[]
  - сколько раз на кажды артикул
- добавить в избранное и убрать из избранного
  - артикул/бренд/запрос -> артикулы[]
  - количество на каждый артикул
- заказать
  - артикул/бренд/запрос -> артикулы[]
  - адреса доставки
  - количество на каждый артикул
- оставить коммент
  - артикул
  - текст
  - количество

исходя из этого, структура:
- тип
- список артикулов
- количество
- доп параметры для выполнения задания = json

преобразование в список артикулов
получаем тип (поисковый запрос/название магазина/список артикулов), преобразуем в список артикулов

входные данные с фронта выше. как будет храниться? нужно включать данные запроса, чтобы можно было отобразить всё в админке.
Что отправляет фронт?
task_request
- тип поиска
- данные для поиска
- задания[]:
  - тип
  - параметры
  - интервал между действиями для каждого из артикулов

task
что нужно для работы шедулера?
- артикул
- какое действие
- параметры
- когда можно начинать
туда же писать статус выполнено/нет
когда было выполнено действие
каким номером сделано

что должен делать бек?
преобразовать 1 в 2:
- если поиск по магазину/поисковому слову, то преобразовать к списоку артикулов
- по каждому из артикулов раскидать N заданий в переданном интервале
- проставить статус группы заданий, что оно в работе

task_request
что должен получать фронт для статуса заданий?
- id
- по чему был выполнен поиск артикулов/перечисление
- статус
- дата начала
- процент выполнения
- финальный список артикулов. процент выполнения по каждому из артикулов
- возможно, лог того что такой то номер сделал такое то дейстие в такое то время

работа запроса:
- получаем данные с фронта
- раскидываем в таблицу для шедулера
- сохраняем данные для отслеживания статуса

периодически проверяем процент выполнения задания. если выполнены все - ставим статус SUCCESS

создание заданий:
  - amount раз создаём TaskVO, заполняем полями, у каждого дату проставлять плюсуя к текущей дате



=============
- фиксировать ошибки
  - не можем найти кому ставить лайк
  - номер заблокирован